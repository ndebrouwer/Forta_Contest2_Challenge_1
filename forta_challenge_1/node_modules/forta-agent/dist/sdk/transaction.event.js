"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TransactionEvent = void 0;
var utils_1 = require("./utils");
var TransactionEvent = (function () {
    function TransactionEvent(type, network, transaction, receipt, traces, addresses, block) {
        if (traces === void 0) { traces = []; }
        this.type = type;
        this.network = network;
        this.transaction = transaction;
        this.receipt = receipt;
        this.traces = traces;
        this.addresses = addresses;
        this.block = block;
    }
    Object.defineProperty(TransactionEvent.prototype, "hash", {
        get: function () {
            return this.transaction.hash;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TransactionEvent.prototype, "from", {
        get: function () {
            return this.transaction.from;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TransactionEvent.prototype, "to", {
        get: function () {
            return this.transaction.to;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TransactionEvent.prototype, "status", {
        get: function () {
            return this.receipt.status;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TransactionEvent.prototype, "gasUsed", {
        get: function () {
            return this.receipt.gasUsed;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TransactionEvent.prototype, "gasPrice", {
        get: function () {
            return this.transaction.gasPrice;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TransactionEvent.prototype, "logs", {
        get: function () {
            return this.receipt.logs;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TransactionEvent.prototype, "timestamp", {
        get: function () {
            return this.block.timestamp;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TransactionEvent.prototype, "blockNumber", {
        get: function () {
            return this.block.number;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TransactionEvent.prototype, "blockHash", {
        get: function () {
            return this.block.hash;
        },
        enumerable: false,
        configurable: true
    });
    TransactionEvent.prototype.filterEvent = function (eventSignature, contractAddress) {
        if (contractAddress === void 0) { contractAddress = ''; }
        var eventTopic = utils_1.keccak256(eventSignature).toLowerCase();
        contractAddress = contractAddress.toLowerCase();
        var events = this.receipt.logs.filter(function (log) { return log.topics.length
            && log.topics[0].toLowerCase() === eventTopic
            && (contractAddress.length ? log.address.toLowerCase() === contractAddress : true); });
        return events;
    };
    return TransactionEvent;
}());
exports.TransactionEvent = TransactionEvent;
