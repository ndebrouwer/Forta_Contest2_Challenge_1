import { EventType, Network } from "./index";
import { Log, Receipt } from "./receipt";
import { Trace } from "./trace";
import { Transaction } from "./transaction";
export interface TxEventBlock {
    hash: string;
    number: number;
    timestamp: number;
}
export declare class TransactionEvent {
    readonly type: EventType;
    readonly network: Network;
    readonly transaction: Transaction;
    readonly receipt: Receipt;
    readonly traces: Trace[];
    readonly addresses: {
        [key: string]: boolean;
    };
    readonly block: TxEventBlock;
    constructor(type: EventType, network: Network, transaction: Transaction, receipt: Receipt, traces: Trace[], addresses: {
        [key: string]: boolean;
    }, block: TxEventBlock);
    get hash(): string;
    get from(): string;
    get to(): string | null;
    get status(): boolean;
    get gasUsed(): string;
    get gasPrice(): string;
    get logs(): Log[];
    get timestamp(): number;
    get blockNumber(): number;
    get blockHash(): string;
    filterEvent(eventSignature: string, contractAddress?: string): Log[];
}
